{"version":3,"file":"ExpoStatusBar.ios.js","sourceRoot":"","sources":["../src/ExpoStatusBar.ios.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,cAAc,EAAE,SAAS,EAAkB,MAAM,cAAc,CAAC;AAEzE,MAAM,CAAC,OAAO,UAAU,aAAa,CAAC,KAAqB;IACzD,IAAI,EAAE,QAAQ,EAAE,GAAG,UAAU,EAAE,GAAG,KAAK,CAAC;IAExC,+EAA+E;IAC/E,sDAAsD;IACtD,MAAM,WAAW,GAAG,cAAc,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;IAEhE,2FAA2F;IAC3F,0CAA0C;IAC1C,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,EAAE;QAChC,QAAQ,GAAG,WAAW,KAAK,OAAO,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,eAAe,CAAC;KACvE;IAED,OAAO,oBAAC,SAAS,kBAAC,QAAQ,EAAE,QAAQ,IAAM,UAAU,EAAI,CAAC;AAC3D,CAAC","sourcesContent":["import React from 'react';\nimport { useColorScheme, StatusBar, StatusBarProps } from 'react-native';\n\nexport default function ExpoStatusBar(props: StatusBarProps) {\n  let { barStyle, ...otherProps } = props;\n\n  // If useColorScheme isn't defined, then this is an old version of React Native\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const colorScheme = useColorScheme ? useColorScheme() : 'light';\n\n  // Pick appropriate 'default' depending on current theme, so if we are locked to light mode\n  // we don't end up with a light status bar\n  if (props.barStyle === 'default') {\n    barStyle = colorScheme === 'light' ? 'dark-content' : 'light-content';\n  }\n\n  return <StatusBar barStyle={barStyle} {...otherProps} />;\n}\n"]}